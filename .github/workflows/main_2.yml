# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: test
        run: |
          var=$secrets.aaa;
          mkdir -p ~/.ssh/
          destdir=/home/runner/work/test_automate_v3/test_automate_v3/.ssh

          if [ -f "$destdir" ]
          then 
              echo "$var" > "$destdir"
          fi
          
      - name: Create SSH key
        run: |
          var="text to append";
          mkdir -p ~/.ssh/
          destdir=/home/runner/work/test_automate_v3/test_automate_v3/.ssh
          
          pwd
          
          if [ -f "$destdir" ]
          then 
            echo "$var" >> "$destdir"
          fi
          
          pwd
          ls
          secret_key = ${{secrets.aaa}}
          echo "$secret_key" >> ../private.key
          sudo chmod 600 ../private.key
          echo "172.16.110.33" > ~/.ssh/known_hosts
          ls
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.aaa}}
          SSH_KNOWN_HOSTS: 172.16.110.33
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          
          
          
          
          
      
      - name: Deploy to Staging server 
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{secrets.aaa}}
          SOURCE: "/"
          REMOTE_HOST:  172.16.110.33
          REMOTE_USER:  Srichand  
          TARGET: 'C:\Users\srichand'
            
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$zzz" > ../private.key
          sudo chmod 600 ../private.key
          echo "172.16.110.33" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.aaa}}
          SSH_KNOWN_HOSTS: 172.16.110.33
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Deploy to Staging server 
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{secrets.aaa}}
          SOURCE: "/"
          REMOTE_HOST:  172.16.110.33
          REMOTE_USER:  Srichand  
          TARGET: 'C:\Users\srichand'
      - uses: actions/checkout@v2
      
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Generate new keygen -> public key, private key, and keyhost
        run: | 
          ssh-keygen
          echo -ne '\n'
          echo -ne '\n'
          echo -ne '\n'
      - name: Copy public key of client to authorized file in windows server
        run: |
          ssh-copy-id srichand@172.16.110.33
      - name: Connect to windows server's cmd.
        run: |
          ssh srichand@172.16.110.33
      - name: cmd 
        run: | 
          ipconfig
      
